{
#include "hash.h"
}

INIT standalone.c/s_p_ip_count_hash: {
  void *hash_func = (void *)GET_NEW_STATIC(standalone.c, hash_ip);
  assert(hash_func);
  $out = ($newtype(struct hash) *)hash_alloc(256, 
                                             sizeof($newtype(struct vsf_sysutil_ipv4addr)), 
                                             sizeof(unsigned int), 
                                             hash_func);                       
}

INIT standalone.c/s_p_pid_ip_hash: {
  void *hash_func = (void *)GET_NEW_STATIC(standalone.c, hash_pid);
  assert(hash_func);
  $out = ($newtype(struct hash) *)hash_alloc(256, 
                                             sizeof(int), 
                                             sizeof($newtype(struct vsf_sysutil_ipv4addr)), 
                                             hash_func);
}

standalone.c/s_children -> standalone.c/s_children: { $out = (unsigned int)$in; }

INIT struct vsf_session.num_this_ip: { $out = 0; }
struct vsf_session.num_clients -> struct vsf_session.num_clients: { $out = (unsigned int)$in; }
